name: CI / CD workflow for Prod
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
env:
  LOCAL_TEST_SEED_PHRASE: ""
  IC_HOST: http://127.0.0.1:8080
  RPC_URL: http://127.0.0.1:8545

jobs:
  integration:
    runs-on: ubuntu-latest

    steps:
      - name: Run Local Evm Repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: bitfinity-network/evm-canister
          ref: develop
          path: ./evm

      - name: Set Up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Cache Rust Toolchain and Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            ~/target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Install Evm Dependencies
        run: |
          cd evm
          echo "Run installations"
          apt update
          apt install -y libssl-dev jq
          sh -ci "$(curl -fsSL https://smartcontracts.org/install.sh)"
          echo "Installing wasm32"

          rustup target add wasm32-unknown-unknown
          echo "Installing ic-wasm"

          cargo install ic-wasm
          echo "Installing icx-proxy"
          cargo install icx-proxy

          echo "Installing foundary"

          curl -L https://foundry.paradigm.xyz | bash

          echo "Installing protobuf"

          apt install -y protobuf-compiler
          protoc --version

      - name: Build Smart Contract
        run: |
          cd evm
          echo "Build Smart Contract"

            ./scripts/build.sh
            ./scripts/build_solidity_smart_contracts.sh
            ./scripts/dfx/deploy_local.sh create

      - name: Checkout repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "yarn"
      - name: Clear yarn cache
        run: yarn cache clean
      - name: Install plugin Dependencies
        run: yarn install --frozen-lockfile
      - name: Run Test
        run: yarn test
